{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import{Checkbox}from'../components/Checkbox';import{useTasks}from'../hooks';import{AddTask}from'./AddTask';import{collatedTasks}from'../constants';import{getTitle,getCollatedTitle,collatedTasksExist}from'../helpers';import{useSelectedProjectValue,useProjectsValue}from'../context';export var Tasks=function Tasks(){var _useSelectedProjectVa=useSelectedProjectValue(),selectedProject=_useSelectedProjectVa.selectedProject;var _useProjectsValue=useProjectsValue(),projects=_useProjectsValue.projects;var _useTasks=useTasks(selectedProject),tasks=_useTasks.tasks;var projectName='';if(projects&&selectedProject&&!collatedTasksExist(selectedProject)){projectName=getTitle(projects,selectedProject).name;console.log('projectName 1: ',projectName);}if(collatedTasksExist(selectedProject)&&selectedProject){projectName=getCollatedTitle(collatedTasks,selectedProject).name;console.log('projectName 2: ',projectName);}useEffect(function(){document.title=\"\".concat(projectName,\": Task!\");});return/*#__PURE__*/_jsxs(\"div\",{className:\"tasks\",\"data-testid\":\"tasks\",children:[/*#__PURE__*/_jsx(\"h2\",{\"data-testid\":\"project-name\",children:projectName}),/*#__PURE__*/_jsx(\"ul\",{className:\"tasks__list\",children:tasks.map(function(task){return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(Checkbox,{id:task.id,taskDesc:task.task}),/*#__PURE__*/_jsx(\"span\",{children:task.task})]},\"\".concat(task.id));})}),/*#__PURE__*/_jsx(AddTask,{})]});};","map":{"version":3,"sources":["/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/Tasks.js"],"names":["React","useState","useEffect","Checkbox","useTasks","AddTask","collatedTasks","getTitle","getCollatedTitle","collatedTasksExist","useSelectedProjectValue","useProjectsValue","Tasks","selectedProject","projects","tasks","projectName","name","console","log","document","title","map","task","id"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAASC,QAAT,KAAyB,wBAAzB,CACA,OAASC,QAAT,KAAwB,UAAxB,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,aAAT,KAA6B,cAA7B,CACA,OAASC,QAAT,CAAmBC,gBAAnB,CAAqCC,kBAArC,KAA8D,YAA9D,CACA,OAAQC,uBAAR,CAAiCC,gBAAjC,KAAwD,YAAxD,CAGA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,2BACGF,uBAAuB,EAD1B,CAChBG,eADgB,uBAChBA,eADgB,uBAEFF,gBAAgB,EAFd,CAEfG,QAFe,mBAEfA,QAFe,eAGPV,QAAQ,CAACS,eAAD,CAHD,CAGhBE,KAHgB,WAGhBA,KAHgB,CAKvB,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CAGA,GAAIF,QAAQ,EAAID,eAAZ,EAA+B,CAACJ,kBAAkB,CAACI,eAAD,CAAtD,CAAwE,CACpEG,WAAW,CAAGT,QAAQ,CAACO,QAAD,CAAWD,eAAX,CAAR,CAAoCI,IAAlD,CACAC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+BH,WAA/B,EACH,CAED,GAAIP,kBAAkB,CAACI,eAAD,CAAlB,EAAuCA,eAA3C,CAA6D,CACzDG,WAAW,CAAGR,gBAAgB,CAACF,aAAD,CAAgBO,eAAhB,CAAhB,CAAiDI,IAA/D,CACAC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+BH,WAA/B,EAEH,CAEDd,SAAS,CAAC,UAAM,CACZkB,QAAQ,CAACC,KAAT,WAAoBL,WAApB,YACH,CAFQ,CAAT,CAKA,mBACI,aAAK,SAAS,CAAC,OAAf,CAAuB,cAAY,OAAnC,wBACE,WAAI,cAAY,cAAhB,UAAgCA,WAAhC,EADF,cAGE,WAAI,SAAS,CAAC,aAAd,UACGD,KAAK,CAACO,GAAN,CAAU,SAACC,IAAD,qBACT,mCACE,KAAC,QAAD,EAAU,EAAE,CAAEA,IAAI,CAACC,EAAnB,CAAuB,QAAQ,CAAED,IAAI,CAACA,IAAtC,EADF,cAEE,sBAAOA,IAAI,CAACA,IAAZ,EAFF,aAAYA,IAAI,CAACC,EAAjB,EADS,EAAV,CADH,EAHF,cAYA,KAAC,OAAD,IAZA,GADJ,CAmBH,CA3CM","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Checkbox } from '../components/Checkbox';\nimport { useTasks} from '../hooks';\nimport { AddTask } from './AddTask';\nimport { collatedTasks} from '../constants';\nimport { getTitle, getCollatedTitle, collatedTasksExist} from '../helpers';\nimport {useSelectedProjectValue, useProjectsValue} from '../context';\n\n\nexport const Tasks = () => {\n    const {selectedProject} = useSelectedProjectValue();\n    const { projects } = useProjectsValue();\n    const {tasks} = useTasks(selectedProject);\n\n    let projectName = '';\n\n\n    if (projects && selectedProject && !collatedTasksExist(selectedProject)){\n        projectName = getTitle(projects, selectedProject).name;\n        console.log('projectName 1: ', projectName);\n    }\n\n    if (collatedTasksExist(selectedProject) && selectedProject ) {\n        projectName = getCollatedTitle(collatedTasks, selectedProject).name;\n        console.log('projectName 2: ', projectName);\n\n    }\n\n    useEffect(() => {\n        document.title = `${projectName}: Task!`\n    });\n\n\n    return (\n        <div className=\"tasks\" data-testid=\"tasks\">\n          <h2 data-testid=\"project-name\">{projectName}</h2>\n    \n          <ul className=\"tasks__list\">\n            {tasks.map((task) => (\n              <li key={`${task.id}`}>\n                <Checkbox id={task.id} taskDesc={task.task} />\n                <span>{task.task}</span>\n              </li>\n            ))}\n          </ul>\n        \n        <AddTask />\n        </div>\n      );\n\n    \n    \n}"]},"metadata":{},"sourceType":"module"}
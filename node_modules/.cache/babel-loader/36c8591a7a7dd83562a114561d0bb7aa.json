{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/IndividualProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { useProjectsValue, useSelectedProjectValue } from '../context';\nimport { firebase } from '../firebase';\nexport const IndividualProject = ({\n  project\n}) => {\n  _s();\n\n  const [showConfirm, setShowConfirm] = useState(false);\n  const {\n    projects,\n    setProjects\n  } = useProjectsValue();\n  const {\n    setSelectedProject\n  } = useSelectedProjectValue();\n\n  const deleteProject = docId => {\n    firebase.firebase().collection('projects').doc(docId).delete() //once projects is deleted, we reset the projects \n    .then(() => {\n      setProjects([...projects]);\n      setSelectedProject('INBOX');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sidebar__dot\",\n      children: \"\\u2022\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sidebar__project-name\",\n      children: project.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sidebar__project-delete\",\n      \"data-testid\": \"delete-project\",\n      onClick: () => setShowConfirm(!showConfirm),\n      children: \"Hello Delete Me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), showConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-delete-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-delete-modal__inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this project?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => deleteProject(project.docId),\n          children: [\"delete\", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setShowConfirm(!showConfirm),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IndividualProject, \"xrcLXWebmhVXWTcPHDBEMR0Xis8=\", false, function () {\n  return [useProjectsValue, useSelectedProjectValue];\n});\n\n_c = IndividualProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndividualProject\");","map":{"version":3,"sources":["/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/IndividualProject.js"],"names":["React","useState","FaTrashAlt","useProjectsValue","useSelectedProjectValue","firebase","IndividualProject","project","showConfirm","setShowConfirm","projects","setProjects","setSelectedProject","deleteProject","docId","collection","doc","delete","then","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AACA,SAAQC,gBAAR,EAA0BC,uBAA1B,QAAwD,YAAxD;AACA,SAAQC,QAAR,QAAuB,aAAvB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AAC5C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAACS,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA0BR,gBAAgB,EAAhD;AACA,QAAM;AAAES,IAAAA;AAAF,MAAwBR,uBAAuB,EAArD;;AAEA,QAAMS,aAAa,GAAGC,KAAK,IAAI;AAC3BT,IAAAA,QAAQ,CACHA,QADL,GAEKU,UAFL,CAEgB,UAFhB,EAGKC,GAHL,CAGSF,KAHT,EAIKG,MAJL,GAKI;AALJ,KAMKC,IANL,CAMU,MAAM;AACRP,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,CAAD,CAAX;AACAE,MAAAA,kBAAkB,CAAC,OAAD,CAAlB;AACH,KATL;AAUH,GAXD;;AAaA,sBACI;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAA,gBAAyCL,OAAO,CAACY;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAM,MAAA,SAAS,EAAC,yBAAhB;AACQ,qBAAY,gBADpB;AAEQ,MAAA,OAAO,EAAE,MAAMV,cAAc,CAAC,CAACD,WAAF,CAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAQI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YARJ,EASKA,WAAW,iBACR;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,OAAO,EAAE,MAAKK,aAAa,CAACN,OAAO,CAACO,KAAT,CAF/B;AAAA,4CAII;AAAM,YAAA,OAAO,EAAE,MAAKL,cAAc,CAAC,CAACD,WAAF,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVR;AAAA,kBADJ;AA2BH,CA7CM;;GAAMF,iB;UAEuBH,gB,EACFC,uB;;;KAHrBE,iB","sourcesContent":["import React, {useState} from 'react';\nimport {FaTrashAlt} from 'react-icons/fa';\nimport {useProjectsValue, useSelectedProjectValue} from '../context';\nimport {firebase} from '../firebase';\n\nexport const IndividualProject = ({project}) => {\n    const [showConfirm, setShowConfirm] = useState(false);\n    const {projects, setProjects} = useProjectsValue();\n    const { setSelectedProject} = useSelectedProjectValue();\n\n    const deleteProject = docId => {\n        firebase\n            .firebase()\n            .collection('projects')\n            .doc(docId)\n            .delete()\n            //once projects is deleted, we reset the projects \n            .then(() => {\n                setProjects([...projects]);\n                setSelectedProject('INBOX');\n            });\n    };\n\n    return (\n        <>\n            <span className='sidebar__dot'>â€¢</span>\n            <span className='sidebar__project-name'>{project.name}</span>\n            <span className='sidebar__project-delete'\n                    data-testid='delete-project'\n                    onClick={() => setShowConfirm(!showConfirm)}>\n                    Hello Delete Me! \n            </span>\n            <FaTrashAlt />\n            {showConfirm && (\n                <div className='project-delete-modal'>\n                    <div className='project-delete-modal__inner'>\n                        <p>Are you sure you want to delete this project?</p>\n                        <button\n                            type='button'\n                            onClick={()=> deleteProject(project.docId)}>\n                            delete\n                            <span onClick={()=> setShowConfirm(!showConfirm)}>Cancel</span>\n                        </button>\n                    </div>\n                </div>\n            )}\n\n        </>\n\n    )\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/context/projects-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext } from 'react';\nimport { useProjects } from '../hooks';\nexport const ProjectsContext = /*#__PURE__*/createContext();\nexport const ProjectsProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    projects,\n    setProjects\n  } = useProjects();\n  return /*#__PURE__*/_jsxDEV(ProjectsContext.Provider, {\n    value: {\n      projects,\n      setProjects\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectsProvider, \"/T0WC6GWd9+LhIcD8y3ND8tm29U=\", false, function () {\n  return [useProjects];\n});\n\n_c = ProjectsProvider;\nexport const useProjectsValue = () => {\n  _s2();\n\n  return useContext(ProjectsContext);\n};\n\n_s2(useProjectsValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsProvider\");","map":{"version":3,"sources":["/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/context/projects-context.js"],"names":["React","createContext","useContext","useProjects","ProjectsContext","ProjectsProvider","children","projects","setProjects","useProjectsValue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,QAA+C,OAA/C;AACA,SAASC,WAAT,QAA4B,UAA5B;AAEA,OAAO,MAAMC,eAAe,gBAAGH,aAAa,EAArC;AACP,OAAO,MAAMI,gBAAgB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAE5C,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA0BL,WAAW,EAA3C;AAEA,sBACI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAACI,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAjC;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAVM;;GAAMD,gB;UAEuBF,W;;;KAFvBE,gB;AAYb,OAAO,MAAMI,gBAAgB,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,eAAD,CAAhB;AAAA,CAAzB;;IAAMK,gB","sourcesContent":["import React, {createContext, useContext} from 'react';\nimport { useProjects } from '../hooks';\n\nexport const ProjectsContext = createContext();\nexport const ProjectsProvider = ({children}) => {\n\n    const {projects, setProjects} = useProjects();\n\n    return (\n        <ProjectsContext.Provider value={{projects, setProjects}}>\n            {children}\n        </ProjectsContext.Provider>\n    );\n\n};\n\nexport const useProjectsValue = () => useContext(ProjectsContext);\n\n\n"]},"metadata":{},"sourceType":"module"}
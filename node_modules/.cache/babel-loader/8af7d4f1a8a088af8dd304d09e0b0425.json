{"ast":null,"code":"import _slicedToArray from\"/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{createContext,useContext,useState}from'react';export var SelectedProjectContext=/*#__PURE__*/createContext();export var SelectedProjectProvider=function SelectedProjectProvider(_ref){var children=_ref.children;var _useState=useState('INBOX'),_useState2=_slicedToArray(_useState,2),selectedProject=_useState2[0],setSelectedProject=_useState2[1];return/*#__PURE__*/_jsx(SelectedProjectContext.Provider,{value:{selectedProject:selectedProject,setSelectedProject:setSelectedProject},children:children});};export var useSelectedProjectValue=function useSelectedProjectValue(){return useContext(SelectedProjectContext);};","map":{"version":3,"sources":["/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/context/selected-project-context.js"],"names":["React","createContext","useContext","useState","SelectedProjectContext","SelectedProjectProvider","children","selectedProject","setSelectedProject","useSelectedProjectValue"],"mappings":"iOAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,QAA3C,KAA2D,OAA3D,CAEA,MAAO,IAAMC,CAAAA,sBAAsB,cAAGH,aAAa,EAA5C,CACP,MAAO,IAAMI,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACTH,QAAQ,CAAC,OAAD,CADC,wCAChDI,eADgD,eAC/BC,kBAD+B,eAGvD,mBACE,KAAC,sBAAD,CAAwB,QAAxB,EACE,KAAK,CAAE,CAAED,eAAe,CAAfA,eAAF,CAAmBC,kBAAkB,CAAlBA,kBAAnB,CADT,UAGGF,QAHH,EADF,CAOD,CAVM,CAYP,MAAO,IAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,SAAMP,CAAAA,UAAU,CAACE,sBAAD,CAAhB,EAAhC","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nexport const SelectedProjectContext = createContext();\nexport const SelectedProjectProvider = ({ children }) => {\n  const [selectedProject, setSelectedProject] = useState('INBOX');\n\n  return (\n    <SelectedProjectContext.Provider\n      value={{ selectedProject, setSelectedProject }}\n    >\n      {children}\n    </SelectedProjectContext.Provider>\n  );\n};\n\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);"]},"metadata":{},"sourceType":"module"}
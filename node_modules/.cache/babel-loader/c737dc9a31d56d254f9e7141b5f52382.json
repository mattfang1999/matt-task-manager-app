{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/AddTask.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from 'react';\n// import { FaRegListAlt, FaRegCalendarAlt } from 'react-icons/fa';\n// import moment from 'moment';\n// import { firebase } from '../firebase';\n// import { useSelectedProjectValue } from '../context';\n// export const AddTask = ({\n//                         showAddTaskMain= true,\n//                         shouldShowMain = false, \n//                         showQuickAddTask, \n//                         setShowQuickAddTask,}) => {\n//                             const [task, setTask] = useState('');\n//                             const [taskDate, setTaskDate] = useState('');\n//                             const [project, setProject] = useState('');\n//                             const [showMain, setShowMain] = useState(shouldShowMain);\n//                             const [showProjectOverlay, setShowProjectOverlay] = useState(false);\n//                             const [showTaskDate, setShowTaskDate] = useState(false);\n//                             const { selectedProject } = useSelectedProjectValue();\n//                             const addTask = () => {\n//                                 const projectId = project || selectedProject;\n//                                 let collatedDate = '';\n//                                 if (projectId === 'TODAY'){\n//                                     collatedDate = moment().format('MM/DD/YYYY');   \n//                                 } else if (projectId === 'NEXT_7'){\n//                                     collatedDate = moment()\n//                                     .add(7, 'days')\n//                                     .format('MM/DD/YYYY');\n//                                 }\n//                                 return (task && \n//                                         projectId && \n//                                         firebase\n//                                             .firestore()\n//                                             .collection('tasks')\n//                                             .add({\n//                                                 archived:false,\n//                                                 projectId,\n//                                                 task,\n//                                                 date: collatedDate || taskDate,\n//                                                 userId: 'nfeCumoN'\n//                                             })\n//                                         .then(()=> {\n//                                             setTask('');\n//                                             setProject('');\n//                                             setShowMain('');\n//                                             setShowProjectOverlay(false);\n//                                         })\n//                                     );\n//                             };\n//                             return (\n//                                 <div className={showQuickAddTask? 'add-task add-task__overlay' : 'add-task'}\n//                                      data-testid='add-task-comp'>\n//                                      {showAddTaskMain && (\n//                                          <div className='add-task__shallow'\n//                                               data-testid='show-main-action'\n//                                               onClick={()=> setShowMain(!showMain)}>\n//                                                 <span className='add-task__plus'>+</span>\n//                                                 <span className='add-task__text'>Add Tasks</span>\n//                                         </div>\n//                                      )}\n//                                      {(showMain || showQuickAddTask && (\n//                                          <div className='add-task__main'\n//                                               data-testid='add-task-main'>\n//                                               {showQuickAddTask && (\n//                                                   <> \n//                                                     <div data-testid='quick-add-task'>\n//                                                         <h2 className='header'>Quick Add Task</h2>\n//                                                         <span\n//                                                             className='add-task__cancel-x'\n//                                                             data-testid='add-task-quick-cancel'\n//                                                             onClick={() => {\n//                                                                 setShowMain(false);\n//                                                                 setShowProjectOverlay(false);\n//                                                                 setShowQuickAddTask(false);\n//                                                             }}>\n//                                                             X\n//                                                             </span>\n//                                                     </div>\n//                                                   </>\n//                                               )}\n//                                               <p>Project Overlay Here</p>\n//                                               <p>TaskDate Here</p>\n//                                               <input\n//                                                 className='add-task__content'\n//                                                 data-testid='add-task-content'\n//                                                 type='text'\n//                                                 value={task} \n//                                                 onChange={e=> setTask(e.target.value)}/>\n//                                               </div>\n//                                      ))\n//                                      }\n//                                 </div>\n//                             );\n//                         };\nimport React, { useState } from 'react';\nimport { FaRegListAlt, FaRegCalendarAlt } from 'react-icons/fa';\nimport moment from 'moment';\nimport { firebase } from '../firebase';\nimport { useSelectedProjectValue } from '../context';\nimport { TaskDate } from './TaskDate';\nexport const AddTask = ({\n  showAddTaskMain = true,\n  shouldShowMain = false,\n  showQuickAddTask,\n  setShowQuickAddTask\n}) => {\n  _s();\n\n  const [task, setTask] = useState('');\n  const [taskDate, setTaskDate] = useState('');\n  const [project, setProject] = useState('');\n  const [showMain, setShowMain] = useState(shouldShowMain);\n  const [showProjectOverlay, setShowProjectOverlay] = useState(false);\n  const [showTaskDate, setShowTaskDate] = useState(false);\n  const {\n    selectedProject\n  } = useSelectedProjectValue();\n\n  const addTask = () => {\n    const projectId = project || selectedProject;\n    let collatedDate = '';\n\n    if (projectId === 'TODAY') {\n      collatedDate = moment().format('DD/MM/YYYY');\n    } else if (projectId === 'NEXT_7') {\n      collatedDate = moment().add(7, 'days').format('DD/MM/YYYY');\n    }\n\n    return task && projectId && firebase.firestore().collection('tasks').add({\n      archived: false,\n      projectId,\n      task,\n      date: collatedDate || taskDate,\n      userId: 'jlIFXIwyAL3tzHMtzRbw'\n    }).then(() => {\n      setTask('');\n      setProject('');\n      setShowMain('');\n      setShowProjectOverlay(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: showQuickAddTask ? 'add-task add-task__overlay' : 'add-task',\n    \"data-testid\": \"add-task-comp\",\n    children: [showAddTaskMain && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task__shallow\",\n      \"data-testid\": \"show-main-action\",\n      onClick: () => setShowMain(!showMain),\n      onKeyDown: e => {\n        if (e.key === 'Enter') setShowMain(!showMain);\n      },\n      tabIndex: 0,\n      \"aria-label\": \"Add task\",\n      role: \"button\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"add-task__plus\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"add-task__text\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), (showMain || showQuickAddTask) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task__main\",\n      \"data-testid\": \"add-task-main\",\n      children: [showQuickAddTask && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"quick-add-task\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"header\",\n            children: \"Quick Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"add-task__cancel-x\",\n            \"data-testid\": \"add-task-quick-cancel\",\n            \"aria-label\": \"Cancel adding task\",\n            onClick: () => {\n              setShowMain(false);\n              setShowProjectOverlay(false);\n              setShowQuickAddTask(false);\n            },\n            onKeyDown: e => {\n              if (e.key === 'Enter') {\n                setShowMain(false);\n                setShowProjectOverlay(false);\n                setShowQuickAddTask(false);\n              }\n            },\n            tabIndex: 0,\n            role: \"button\",\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"add-task__content\",\n        \"aria-label\": \"Enter your task\",\n        \"data-testid\": \"add-task-content\",\n        type: \"text\",\n        value: task,\n        onChange: e => setTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"add-task__submit\",\n        \"data-testid\": \"add-task\",\n        onClick: () => showQuickAddTask ? addTask() && setShowQuickAddTask(false) : addTask(),\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), !showQuickAddTask && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"add-task__cancel\",\n        \"data-testid\": \"add-task-main-cancel\",\n        onClick: () => {\n          setShowMain(false);\n          setShowProjectOverlay(false);\n        },\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            setShowMain(false);\n            setShowProjectOverlay(false);\n          }\n        },\n        \"aria-label\": \"Cancel adding a task\",\n        tabIndex: 0,\n        role: \"button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"add-task__project\",\n        \"data-testid\": \"show-project-overlay\",\n        onClick: () => setShowProjectOverlay(!showProjectOverlay),\n        onKeyDown: e => {\n          if (e.key === 'Enter') setShowProjectOverlay(!showProjectOverlay);\n        },\n        tabIndex: 0,\n        role: \"button\",\n        children: /*#__PURE__*/_jsxDEV(FaRegListAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"add-task__date\",\n        \"data-testid\": \"show-task-date-overlay\",\n        onClick: () => setShowTaskDate(!showTaskDate),\n        onKeyDown: e => {\n          if (e.key === 'Enter') setShowTaskDate(!showTaskDate);\n        },\n        tabIndex: 0,\n        role: \"button\",\n        children: /*#__PURE__*/_jsxDEV(FaRegCalendarAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddTask, \"alQiLjZXyAqAf8jQOh0e+IddWtg=\", false, function () {\n  return [useSelectedProjectValue];\n});\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/AddTask.js"],"names":["React","useState","FaRegListAlt","FaRegCalendarAlt","moment","firebase","useSelectedProjectValue","TaskDate","AddTask","showAddTaskMain","shouldShowMain","showQuickAddTask","setShowQuickAddTask","task","setTask","taskDate","setTaskDate","project","setProject","showMain","setShowMain","showProjectOverlay","setShowProjectOverlay","showTaskDate","setShowTaskDate","selectedProject","addTask","projectId","collatedDate","format","add","firestore","collection","archived","date","userId","then","e","key","target","value"],"mappings":"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","sourcesContent":["// import React, { useState } from 'react';\n// import { FaRegListAlt, FaRegCalendarAlt } from 'react-icons/fa';\n// import moment from 'moment';\n// import { firebase } from '../firebase';\n// import { useSelectedProjectValue } from '../context';\n\n// export const AddTask = ({\n//                         showAddTaskMain= true,\n//                         shouldShowMain = false, \n//                         showQuickAddTask, \n//                         setShowQuickAddTask,}) => {\n\n//                             const [task, setTask] = useState('');\n//                             const [taskDate, setTaskDate] = useState('');\n//                             const [project, setProject] = useState('');\n//                             const [showMain, setShowMain] = useState(shouldShowMain);\n//                             const [showProjectOverlay, setShowProjectOverlay] = useState(false);\n//                             const [showTaskDate, setShowTaskDate] = useState(false);\n\n//                             const { selectedProject } = useSelectedProjectValue();\n\n//                             const addTask = () => {\n//                                 const projectId = project || selectedProject;\n//                                 let collatedDate = '';\n\n//                                 if (projectId === 'TODAY'){\n//                                     collatedDate = moment().format('MM/DD/YYYY');   \n//                                 } else if (projectId === 'NEXT_7'){\n//                                     collatedDate = moment()\n//                                     .add(7, 'days')\n//                                     .format('MM/DD/YYYY');\n//                                 }\n\n//                                 return (task && \n//                                         projectId && \n//                                         firebase\n//                                             .firestore()\n//                                             .collection('tasks')\n//                                             .add({\n//                                                 archived:false,\n//                                                 projectId,\n//                                                 task,\n//                                                 date: collatedDate || taskDate,\n//                                                 userId: 'nfeCumoN'\n//                                             })\n//                                         .then(()=> {\n//                                             setTask('');\n//                                             setProject('');\n//                                             setShowMain('');\n//                                             setShowProjectOverlay(false);\n//                                         })\n//                                     );\n\n//                             };\n\n\n\n\n\n//                             return (\n\n//                                 <div className={showQuickAddTask? 'add-task add-task__overlay' : 'add-task'}\n//                                      data-testid='add-task-comp'>\n\n//                                      {showAddTaskMain && (\n//                                          <div className='add-task__shallow'\n//                                               data-testid='show-main-action'\n//                                               onClick={()=> setShowMain(!showMain)}>\n\n//                                                 <span className='add-task__plus'>+</span>\n//                                                 <span className='add-task__text'>Add Tasks</span>\n\n\n                                            \n//                                         </div>\n//                                      )}\n\n//                                      {(showMain || showQuickAddTask && (\n//                                          <div className='add-task__main'\n//                                               data-testid='add-task-main'>\n\n//                                               {showQuickAddTask && (\n//                                                   <> \n//                                                     <div data-testid='quick-add-task'>\n//                                                         <h2 className='header'>Quick Add Task</h2>\n//                                                         <span\n//                                                             className='add-task__cancel-x'\n//                                                             data-testid='add-task-quick-cancel'\n//                                                             onClick={() => {\n//                                                                 setShowMain(false);\n//                                                                 setShowProjectOverlay(false);\n//                                                                 setShowQuickAddTask(false);\n\n//                                                             }}>\n//                                                             X\n//                                                             </span>\n//                                                     </div>\n//                                                   </>\n\n//                                               )}\n//                                               <p>Project Overlay Here</p>\n//                                               <p>TaskDate Here</p>\n//                                               <input\n//                                                 className='add-task__content'\n//                                                 data-testid='add-task-content'\n//                                                 type='text'\n//                                                 value={task} \n//                                                 onChange={e=> setTask(e.target.value)}/>\n\n                                              \n//                                               </div>\n//                                      ))\n\n//                                      }\n\n                        \n//                                 </div>\n\n\n//                             );\n\n\n\n//                         };\n\nimport React, { useState } from 'react';\nimport { FaRegListAlt, FaRegCalendarAlt } from 'react-icons/fa';\nimport moment from 'moment';\nimport { firebase } from '../firebase';\nimport { useSelectedProjectValue } from '../context';\nimport { TaskDate } from './TaskDate';\n\nexport const AddTask = ({\n  showAddTaskMain = true,\n  shouldShowMain = false,\n  showQuickAddTask,\n  setShowQuickAddTask,\n}) => {\n  const [task, setTask] = useState('');\n  const [taskDate, setTaskDate] = useState('');\n  const [project, setProject] = useState('');\n  const [showMain, setShowMain] = useState(shouldShowMain);\n  const [showProjectOverlay, setShowProjectOverlay] = useState(false);\n  const [showTaskDate, setShowTaskDate] = useState(false);\n\n  const { selectedProject } = useSelectedProjectValue();\n\n  const addTask = () => {\n    const projectId = project || selectedProject;\n    let collatedDate = '';\n\n    if (projectId === 'TODAY') {\n      collatedDate = moment().format('DD/MM/YYYY');\n    } else if (projectId === 'NEXT_7') {\n      collatedDate = moment().add(7, 'days').format('DD/MM/YYYY');\n    }\n\n    return (\n      task &&\n      projectId &&\n      firebase\n        .firestore()\n        .collection('tasks')\n        .add({\n          archived: false,\n          projectId,\n          task,\n          date: collatedDate || taskDate,\n          userId: 'jlIFXIwyAL3tzHMtzRbw',\n        })\n        .then(() => {\n          setTask('');\n          setProject('');\n          setShowMain('');\n          setShowProjectOverlay(false);\n        })\n    );\n  };\n\n  return (\n    <div\n      className={showQuickAddTask ? 'add-task add-task__overlay' : 'add-task'}\n      data-testid=\"add-task-comp\"\n    >\n      {showAddTaskMain && (\n        <div\n          className=\"add-task__shallow\"\n          data-testid=\"show-main-action\"\n          onClick={() => setShowMain(!showMain)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') setShowMain(!showMain);\n          }}\n          tabIndex={0}\n          aria-label=\"Add task\"\n          role=\"button\"\n        >\n          <span className=\"add-task__plus\">+</span>\n          <span className=\"add-task__text\">Add Task</span>\n        </div>\n      )}\n\n      {(showMain || showQuickAddTask) && (\n        <div className=\"add-task__main\" data-testid=\"add-task-main\">\n          {showQuickAddTask && (\n            <>\n              <div data-testid=\"quick-add-task\">\n                <h2 className=\"header\">Quick Add Task</h2>\n                <span\n                  className=\"add-task__cancel-x\"\n                  data-testid=\"add-task-quick-cancel\"\n                  aria-label=\"Cancel adding task\"\n                  onClick={() => {\n                    setShowMain(false);\n                    setShowProjectOverlay(false);\n                    setShowQuickAddTask(false);\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') {\n                      setShowMain(false);\n                      setShowProjectOverlay(false);\n                      setShowQuickAddTask(false);\n                    }\n                  }}\n                  tabIndex={0}\n                  role=\"button\"\n                >\n                  X\n                </span>\n              </div>\n            </>\n          )}\n          \n\n          <input\n            className=\"add-task__content\"\n            aria-label=\"Enter your task\"\n            data-testid=\"add-task-content\"\n            type=\"text\"\n            value={task}\n            onChange={(e) => setTask(e.target.value)}\n          />\n          <button\n            type=\"button\"\n            className=\"add-task__submit\"\n            data-testid=\"add-task\"\n            onClick={() =>\n              showQuickAddTask\n                ? addTask() && setShowQuickAddTask(false)\n                : addTask()\n            }\n          >\n            Add Task\n          </button>\n          {!showQuickAddTask && (\n            <span\n              className=\"add-task__cancel\"\n              data-testid=\"add-task-main-cancel\"\n              onClick={() => {\n                setShowMain(false);\n                setShowProjectOverlay(false);\n              }}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  setShowMain(false);\n                  setShowProjectOverlay(false);\n                }\n              }}\n              aria-label=\"Cancel adding a task\"\n              tabIndex={0}\n              role=\"button\"\n            >\n              Cancel\n            </span>\n          )}\n          <span\n            className=\"add-task__project\"\n            data-testid=\"show-project-overlay\"\n            onClick={() => setShowProjectOverlay(!showProjectOverlay)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') setShowProjectOverlay(!showProjectOverlay);\n            }}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <FaRegListAlt />\n          </span>\n          <span\n            className=\"add-task__date\"\n            data-testid=\"show-task-date-overlay\"\n            onClick={() => setShowTaskDate(!showTaskDate)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') setShowTaskDate(!showTaskDate);\n            }}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <FaRegCalendarAlt />\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}
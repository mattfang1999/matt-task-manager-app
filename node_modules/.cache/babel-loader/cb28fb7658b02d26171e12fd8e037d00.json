{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Checkbox } from '../components/Checkbox';\nimport { useTasks } from '../hooks';\nimport { collatedTasks } from '../constants';\nimport { getTitle, getCollatedTitle, collatedTasksExist } from '../helpers';\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\nexport const Tasks = () => {\n  _s();\n\n  const {\n    selectedProject\n  } = useSelectedProjectValue();\n  const {\n    projects\n  } = useProjectsValue();\n  const {\n    tasks\n  } = useTasks(selectedProject);\n  let projectName = '';\n\n  if (projects && selectedProject && !collatedTasksExist(selectedProject)) {\n    projectName = getTitle(projects, selectedProject).name;\n    console.log('projectName 1: ', projectName);\n  }\n\n  if (collatedTasksExist(selectedProject) && selectedProject) {\n    projectName = getCollatedTitle(collatedTasks, selectedProject).name;\n    console.log('projectName 2: ', projectName);\n  }\n\n  useEffect(() => {\n    document.title = `${projectName}: Task!`;\n  });\n  console.log('tasks', tasks); // return (\n  //     <div className='tasks' data-testid='tasks'>\n  //         <h2 data-testid='project-name'> {projectName}</h2>\n  //         <ul className='tasks__list'>\n  //             {tasks.map((task, index) => (\n  //                 <li key={index}>\n  //                     <Checkbox id={task.id}/>\n  //                     <span>{task.task}</span>\n  //                 </li>\n  //             ))}\n  //         </ul>\n  //     </div>\n  // )\n};\n\n_s(Tasks, \"93iKqvrVTc7wVHHgcnkKoBLdB0M=\", false, function () {\n  return [useSelectedProjectValue, useProjectsValue, useTasks];\n});\n\n_c = Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/Tasks.js"],"names":["React","useState","useEffect","Checkbox","useTasks","collatedTasks","getTitle","getCollatedTitle","collatedTasksExist","useSelectedProjectValue","useProjectsValue","Tasks","selectedProject","projects","tasks","projectName","name","console","log","document","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAwB,UAAxB;AACA,SAASC,aAAT,QAA6B,cAA7B;AACA,SAASC,QAAT,EAAmBC,gBAAnB,EAAqCC,kBAArC,QAA8D,YAA9D;AACA,SAAQC,uBAAR,EAAiCC,gBAAjC,QAAwD,YAAxD;AAGA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACvB,QAAM;AAACC,IAAAA;AAAD,MAAoBH,uBAAuB,EAAjD;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAeH,gBAAgB,EAArC;AACA,QAAM;AAACI,IAAAA;AAAD,MAAUV,QAAQ,CAACQ,eAAD,CAAxB;AAEA,MAAIG,WAAW,GAAG,EAAlB;;AAGA,MAAIF,QAAQ,IAAID,eAAZ,IAA+B,CAACJ,kBAAkB,CAACI,eAAD,CAAtD,EAAwE;AACpEG,IAAAA,WAAW,GAAGT,QAAQ,CAACO,QAAD,EAAWD,eAAX,CAAR,CAAoCI,IAAlD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,WAA/B;AACH;;AAED,MAAIP,kBAAkB,CAACI,eAAD,CAAlB,IAAuCA,eAA3C,EAA6D;AACzDG,IAAAA,WAAW,GAAGR,gBAAgB,CAACF,aAAD,EAAgBO,eAAhB,CAAhB,CAAiDI,IAA/D;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,WAA/B;AAEH;;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,QAAQ,CAACC,KAAT,GAAkB,GAAEL,WAAY,SAAhC;AACH,GAFQ,CAAT;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB,EAvBuB,CA0BvB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEH,CA5CM;;GAAMH,K;UACiBF,uB,EACLC,gB,EACLN,Q;;;KAHPO,K","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Checkbox } from '../components/Checkbox';\nimport { useTasks} from '../hooks';\nimport { collatedTasks} from '../constants';\nimport { getTitle, getCollatedTitle, collatedTasksExist} from '../helpers';\nimport {useSelectedProjectValue, useProjectsValue} from '../context';\n\n\nexport const Tasks = () => {\n    const {selectedProject} = useSelectedProjectValue();\n    const { projects } = useProjectsValue();\n    const {tasks} = useTasks(selectedProject);\n\n    let projectName = '';\n\n\n    if (projects && selectedProject && !collatedTasksExist(selectedProject)){\n        projectName = getTitle(projects, selectedProject).name;\n        console.log('projectName 1: ', projectName);\n    }\n\n    if (collatedTasksExist(selectedProject) && selectedProject ) {\n        projectName = getCollatedTitle(collatedTasks, selectedProject).name;\n        console.log('projectName 2: ', projectName);\n\n    }\n\n    useEffect(() => {\n        document.title = `${projectName}: Task!`\n    });\n\n    console.log('tasks', tasks);\n\n\n    // return (\n    //     <div className='tasks' data-testid='tasks'>\n    //         <h2 data-testid='project-name'> {projectName}</h2>\n\n    //         <ul className='tasks__list'>\n    //             {tasks.map((task, index) => (\n    //                 <li key={index}>\n    //                     <Checkbox id={task.id}/>\n    //                     <span>{task.task}</span>\n    //                 </li>\n    //             ))}\n\n    //         </ul>\n    //     </div>\n\n\n    // )\n    \n}"]},"metadata":{},"sourceType":"module"}
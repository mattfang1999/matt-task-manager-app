{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FaRegListAlt, FaRegCalendarAlt } from 'react-icons/fa';\nimport moment from 'moment';\nimport { firebase } from '../firebase';\nimport { useSelectedProjectValue } from '../context';\nexport const AddTask = ({\n  showAddTaskMain = true,\n  showShouldMain = false,\n  showQuickAddTask,\n  setShowQuickAddTask\n}) => {\n  _s();\n\n  const [task, setTask] = useState('');\n  const [taskDate, setTaskDate] = useState('');\n  const [project, setProject] = useState('');\n  const [showMain, setShowMain] = useState(shouldShowMain);\n  const [showProjectOverlay, setShowProjectOverlay] = useState(false);\n  const [showTaskDate, setShowTaskDate] = useState(false);\n  const {\n    selectedProject\n  } = useSelectedProjectValue();\n\n  const addTask = () => {\n    const projectId = project || selectedProject;\n    let collatedDate = '';\n\n    if (projectId === 'TODAY') {\n      collatedDate = moment().format('MM/DD/YYYY');\n    } else if (projectId === 'NEXT_7') {\n      collatedDate = moment().add(7, 'days').format('MM/DD/YYYY');\n    }\n\n    return task && projectId && firebase.firestore().collection('tasks').add({\n      archived: false,\n      projectId,\n      task,\n      date: collatedDate || taskDate,\n      userId: 'nfeCumoN'\n    }).then(() => {\n      setTask('');\n      setProject('');\n      setShowMain('');\n      setShowProjectOverlay(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: showQuickAddTask ? 'add-task add-task__overlay' : 'add-task',\n    \"data-testid\": \"add-task-comp\",\n    children: showAddTaskMain && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task__shallow\",\n      \"data-testid\": \"show-main-action\",\n      onClick: () => setShowMain(!showMain),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"add-task__plus\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"add-task__text\",\n        children: \"Add Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 42\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 33\n  }, this);\n};\n\n_s(AddTask, \"alQiLjZXyAqAf8jQOh0e+IddWtg=\", false, function () {\n  return [useSelectedProjectValue];\n});\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/AddTask.js"],"names":["React","useState","FaRegListAlt","FaRegCalendarAlt","moment","firebase","useSelectedProjectValue","AddTask","showAddTaskMain","showShouldMain","showQuickAddTask","setShowQuickAddTask","task","setTask","taskDate","setTaskDate","project","setProject","showMain","setShowMain","shouldShowMain","showProjectOverlay","setShowProjectOverlay","showTaskDate","setShowTaskDate","selectedProject","addTask","projectId","collatedDate","format","add","firestore","collection","archived","date","userId","then"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,gBAA/C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,uBAAT,QAAwC,YAAxC;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AACAC,EAAAA,eAAe,GAAE,IADjB;AAEAC,EAAAA,cAAc,GAAG,KAFjB;AAGAC,EAAAA,gBAHA;AAIAC,EAAAA;AAJA,CAAD,KAI2B;AAAA;;AAEtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAACmB,cAAD,CAAxC;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CrB,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACsB,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAM;AAAEwB,IAAAA;AAAF,MAAsBnB,uBAAuB,EAAnD;;AAEA,QAAMoB,OAAO,GAAG,MAAM;AAClB,UAAMC,SAAS,GAAGX,OAAO,IAAIS,eAA7B;AACA,QAAIG,YAAY,GAAG,EAAnB;;AAEA,QAAID,SAAS,KAAK,OAAlB,EAA0B;AACtBC,MAAAA,YAAY,GAAGxB,MAAM,GAAGyB,MAAT,CAAgB,YAAhB,CAAf;AACH,KAFD,MAEO,IAAIF,SAAS,KAAK,QAAlB,EAA2B;AAC9BC,MAAAA,YAAY,GAAGxB,MAAM,GACpB0B,GADc,CACV,CADU,EACP,MADO,EAEdD,MAFc,CAEP,YAFO,CAAf;AAGH;;AAED,WAAQjB,IAAI,IACJe,SADA,IAEAtB,QAAQ,CACH0B,SADL,GAEKC,UAFL,CAEgB,OAFhB,EAGKF,GAHL,CAGS;AACDG,MAAAA,QAAQ,EAAC,KADR;AAEDN,MAAAA,SAFC;AAGDf,MAAAA,IAHC;AAIDsB,MAAAA,IAAI,EAAEN,YAAY,IAAId,QAJrB;AAKDqB,MAAAA,MAAM,EAAE;AALP,KAHT,EAUCC,IAVD,CAUM,MAAK;AACPvB,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAI,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAG,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH,KAfD,CAFR;AAoBH,GAhCD;;AAsCA,sBAEI;AAAK,IAAA,SAAS,EAAEZ,gBAAgB,GAAE,4BAAF,GAAiC,UAAjE;AACK,mBAAY,eADjB;AAAA,cAGMF,eAAe,iBACZ;AAAK,MAAA,SAAS,EAAC,mBAAf;AACK,qBAAY,kBADjB;AAEK,MAAA,OAAO,EAAE,MAAKW,WAAW,CAAC,CAACD,QAAF,CAF9B;AAAA,8BAIO;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJP,eAKO;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAJT;AAAA;AAAA;AAAA;AAAA,UAFJ;AA0BH,CA/ElB;;GAAMX,O;UAa2CD,uB;;;KAb3CC,O","sourcesContent":["import React, { useState } from 'react';\nimport { FaRegListAlt, FaRegCalendarAlt } from 'react-icons/fa';\nimport moment from 'moment';\nimport { firebase } from '../firebase';\nimport { useSelectedProjectValue } from '../context';\n\nexport const AddTask = ({\n                        showAddTaskMain= true,\n                        showShouldMain = false, \n                        showQuickAddTask, \n                        setShowQuickAddTask,}) => {\n\n                            const [task, setTask] = useState('');\n                            const [taskDate, setTaskDate] = useState('');\n                            const [project, setProject] = useState('');\n                            const [showMain, setShowMain] = useState(shouldShowMain);\n                            const [showProjectOverlay, setShowProjectOverlay] = useState(false);\n                            const [showTaskDate, setShowTaskDate] = useState(false);\n\n                            const { selectedProject } = useSelectedProjectValue();\n\n                            const addTask = () => {\n                                const projectId = project || selectedProject;\n                                let collatedDate = '';\n\n                                if (projectId === 'TODAY'){\n                                    collatedDate = moment().format('MM/DD/YYYY');   \n                                } else if (projectId === 'NEXT_7'){\n                                    collatedDate = moment()\n                                    .add(7, 'days')\n                                    .format('MM/DD/YYYY');\n                                }\n\n                                return (task && \n                                        projectId && \n                                        firebase\n                                            .firestore()\n                                            .collection('tasks')\n                                            .add({\n                                                archived:false,\n                                                projectId,\n                                                task,\n                                                date: collatedDate || taskDate,\n                                                userId: 'nfeCumoN'\n                                            })\n                                        .then(()=> {\n                                            setTask('');\n                                            setProject('');\n                                            setShowMain('');\n                                            setShowProjectOverlay(false);\n                                        })\n                                    );\n\n                            };\n\n\n\n\n\n                            return (\n\n                                <div className={showQuickAddTask? 'add-task add-task__overlay' : 'add-task'}\n                                     data-testid='add-task-comp'>\n\n                                     {showAddTaskMain && (\n                                         <div className='add-task__shallow'\n                                              data-testid='show-main-action'\n                                              onClick={()=> setShowMain(!showMain)}>\n\n                                                <span className='add-task__plus'>+</span>\n                                                <span className='add-task__text'>Add Tasks</span>\n\n\n                                            \n                                        </div>\n                                     )}\n\n                        \n                                </div>\n\n\n                            );\n\n\n\n                        };\n\n"]},"metadata":{},"sourceType":"module"}
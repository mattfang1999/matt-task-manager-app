{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/TaskDate.js\";\n// import React, { useState } from 'react';\n// import moment from 'moment';\n// import {FaSpaceShuttle, FaSun, FaRegPaperPlane} from 'react-icons/fa';\n// export const TaskDate = ({setTaskDate, showTaskDate, setShowTaskDate}) => showTaskDate && (\n//     <div className='task-date' data-testid='task-date-overlay'>\n//         <ul className='task-date__list'>\n//             <li\n//                 onClick={()=>{\n//                     setShowTaskDate(false);\n//                     setTaskDate(moment().format('MM/DD/YYYY'));\n//                 }}\n//                 data-testid='task-date-overlay'\n//             >\n//             <span>\n//                 <FaSpaceShuttle/>\n//             </span>\n//             <span>Today</span>\n//             </li>\n//             <li\n//                 onClick={()=>{\n//                     setShowTaskDate(false);\n//                     setTaskDate(moment().add(1,'day')\n//                     .format('MM/DD/YYYY'));\n//                 }}\n//                 data-testid='task-date-tomorrow'\n//             >\n//             <span>\n//                 <FaSun/>\n//             </span>\n//             <span>Tomorrow</span>\n//             </li>\n//             <li\n//                 onClick={()=>{\n//                     setShowTaskDate(false);\n//                     setTaskDate(moment().add(7, 'days').format('MM/DD/YYYY'));\n//                 }}\n//                 data-testid='task-date-next-week'\n//             >\n//             <span>\n//                 <FaRegPaperPlane/>\n//             </span>\n//             <span>Next Week</span>\n//             </li>\n//         </ul>\n//     </div>\n// )\nimport React from 'react';\nimport moment from 'moment';\nimport { FaSpaceShuttle, FaSun, FaRegPaperPlane } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nexport const TaskDate = ({\n  setTaskDate,\n  showTaskDate,\n  setShowTaskDate\n}) => showTaskDate && /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"task-date\",\n  \"data-testid\": \"task-date-overlay\",\n  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"task-date__list\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setShowTaskDate(false);\n          setTaskDate(moment().format('DD/MM/YYYY'));\n        },\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            setShowTaskDate(false);\n            setTaskDate(moment().format('DD/MM/YYYY'));\n          }\n        },\n        \"data-testid\": \"task-date-today\",\n        tabIndex: 0,\n        \"aria-label\": \"Select today as the task date\",\n        role: \"button\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(FaSpaceShuttle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setShowTaskDate(false);\n          setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\n        },\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            setShowTaskDate(false);\n            setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\n          }\n        },\n        \"data-testid\": \"task-date-tomorrow\",\n        role: \"button\",\n        tabIndex: 0,\n        \"aria-label\": \"Select tomorrow as the task date\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(FaSun, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Tomorrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setShowTaskDate(false);\n          setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\n        },\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            setShowTaskDate(false);\n            setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\n          }\n        },\n        \"data-testid\": \"task-date-next-week\",\n        \"aria-label\": \"Select next week as the task date\",\n        tabIndex: 0,\n        role: \"button\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(FaRegPaperPlane, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Next week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 5\n}, this);\n_c = TaskDate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDate\");","map":{"version":3,"sources":["/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/TaskDate.js"],"names":["React","moment","FaSpaceShuttle","FaSun","FaRegPaperPlane","PropTypes","TaskDate","setTaskDate","showTaskDate","setShowTaskDate","format","e","key","add"],"mappings":"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","sourcesContent":["// import React, { useState } from 'react';\n// import moment from 'moment';\n// import {FaSpaceShuttle, FaSun, FaRegPaperPlane} from 'react-icons/fa';\n\n// export const TaskDate = ({setTaskDate, showTaskDate, setShowTaskDate}) => showTaskDate && (\n//     <div className='task-date' data-testid='task-date-overlay'>\n//         <ul className='task-date__list'>\n//             <li\n//                 onClick={()=>{\n//                     setShowTaskDate(false);\n//                     setTaskDate(moment().format('MM/DD/YYYY'));\n\n//                 }}\n//                 data-testid='task-date-overlay'\n//             >\n//             <span>\n//                 <FaSpaceShuttle/>\n//             </span>\n//             <span>Today</span>\n\n//             </li>\n\n//             <li\n//                 onClick={()=>{\n//                     setShowTaskDate(false);\n//                     setTaskDate(moment().add(1,'day')\n//                     .format('MM/DD/YYYY'));\n\n//                 }}\n//                 data-testid='task-date-tomorrow'\n//             >\n//             <span>\n//                 <FaSun/>\n//             </span>\n//             <span>Tomorrow</span>\n\n//             </li>\n\n//             <li\n//                 onClick={()=>{\n//                     setShowTaskDate(false);\n//                     setTaskDate(moment().add(7, 'days').format('MM/DD/YYYY'));\n\n//                 }}\n//                 data-testid='task-date-next-week'\n//             >\n//             <span>\n//                 <FaRegPaperPlane/>\n//             </span>\n//             <span>Next Week</span>\n\n//             </li>\n//         </ul>\n//     </div>\n// )\n\nimport React from 'react';\nimport moment from 'moment';\nimport { FaSpaceShuttle, FaSun, FaRegPaperPlane } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\nexport const TaskDate = ({ setTaskDate, showTaskDate, setShowTaskDate }) =>\n  showTaskDate && (\n    <div className=\"task-date\" data-testid=\"task-date-overlay\">\n      <ul className=\"task-date__list\">\n        <li>\n          <div\n            onClick={() => {\n              setShowTaskDate(false);\n              setTaskDate(moment().format('DD/MM/YYYY'));\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setShowTaskDate(false);\n                setTaskDate(moment().format('DD/MM/YYYY'));\n              }\n            }}\n            data-testid=\"task-date-today\"\n            tabIndex={0}\n            aria-label=\"Select today as the task date\"\n            role=\"button\"\n          >\n            <span>\n              <FaSpaceShuttle />\n            </span>\n            <span>Today</span>\n          </div>\n        </li>\n        <li>\n          <div\n            onClick={() => {\n              setShowTaskDate(false);\n              setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setShowTaskDate(false);\n                setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\n              }\n            }}\n            data-testid=\"task-date-tomorrow\"\n            role=\"button\"\n            tabIndex={0}\n            aria-label=\"Select tomorrow as the task date\"\n          >\n            <span>\n              <FaSun />\n            </span>\n            <span>Tomorrow</span>\n          </div>\n        </li>\n        <li>\n          <div\n            onClick={() => {\n              setShowTaskDate(false);\n              setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setShowTaskDate(false);\n                setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\n              }\n            }}\n            data-testid=\"task-date-next-week\"\n            aria-label=\"Select next week as the task date\"\n            tabIndex={0}\n            role=\"button\"\n          >\n            <span>\n              <FaRegPaperPlane />\n            </span>\n            <span>Next week</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );"]},"metadata":{},"sourceType":"module"}
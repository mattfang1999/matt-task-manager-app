{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\nimport { IndividualProject } from './IndividualProject';\nexport const Projects = ({\n  activeValue = null\n}) => {\n  _s();\n\n  const [active, setActive] = useState(activeValue);\n  const {\n    setSelectedProject\n  } = useSelectedProjectValue();\n  const {\n    projects\n  } = useProjectsValue();\n  return projects && projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n    \"data-doc-id\": project.docId,\n    className: active === project.projectId ? 'active sidebar__project' : 'sidebar__project',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"button\",\n      tabIndex: 0,\n      \"aria-label\": `Select ${project.name} as the task project`,\n      onClick: () => {\n        setActive(project.projectId);\n        setSelectedProject(project.projectId);\n      },\n      onKeyDown: e => {\n        if (e.key === 'Enter') {\n          setActive(project.projectId);\n          setSelectedProject(project.projectId);\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(IndividualProject, {\n        project: project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, project.projectId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this));\n};\n\n_s(Projects, \"luqUhN3RH5J52tPZ2BiB3n96wWU=\", false, function () {\n  return [useSelectedProjectValue, useProjectsValue];\n});\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/Projects.js"],"names":["React","useState","useSelectedProjectValue","useProjectsValue","IndividualProject","Projects","activeValue","active","setActive","setSelectedProject","projects","map","project","docId","projectId","name","e","key"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,uBAAT,EAAkCC,gBAAlC,QAA0D,YAA1D;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,WAAW,GAAG;AAAhB,CAAD,KAA4B;AAAA;;AAClD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACK,WAAD,CAApC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAyBP,uBAAuB,EAAtD;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAeP,gBAAgB,EAArC;AAEA,SACEO,QAAQ,IACRA,QAAQ,CAACC,GAAT,CAAcC,OAAD,iBACX;AAGE,mBAAaA,OAAO,CAACC,KAHvB;AAIE,IAAA,SAAS,EACPN,MAAM,KAAKK,OAAO,CAACE,SAAnB,GACI,yBADJ,GAEI,kBAPR;AAAA,2BAUE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAE,CAFZ;AAGE,oBAAa,UAASF,OAAO,CAACG,IAAK,sBAHrC;AAIE,MAAA,OAAO,EAAE,MAAM;AACbP,QAAAA,SAAS,CAACI,OAAO,CAACE,SAAT,CAAT;AACAL,QAAAA,kBAAkB,CAACG,OAAO,CAACE,SAAT,CAAlB;AACD,OAPH;AAQE,MAAA,SAAS,EAAGE,CAAD,IAAO;AAChB,YAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBT,UAAAA,SAAS,CAACI,OAAO,CAACE,SAAT,CAAT;AACAL,UAAAA,kBAAkB,CAACG,OAAO,CAACE,SAAT,CAAlB;AACD;AACF,OAbH;AAAA,6BAgBE,QAAC,iBAAD;AAAmB,QAAA,OAAO,EAAEF;AAA5B;AAAA;AAAA;AAAA;AAAA;AAhBF;AAAA;AAAA;AAAA;AAAA;AAVF,KACOA,OAAO,CAACE,SADf;AAAA;AAAA;AAAA;AAAA,UADF,CAFF;AAmCD,CAxCM;;GAAMT,Q;UAEoBH,uB,EACVC,gB;;;KAHVE,Q","sourcesContent":["\nimport React, { useState } from 'react';\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\nimport { IndividualProject } from './IndividualProject';\n\nexport const Projects = ({ activeValue = null }) => {\n  const [active, setActive] = useState(activeValue);\n  const { setSelectedProject } = useSelectedProjectValue();\n  const { projects } = useProjectsValue();\n\n  return (\n    projects &&\n    projects.map((project) => (\n      <li\n        key={project.projectId}\n     \n        data-doc-id={project.docId}\n        className={\n          active === project.projectId\n            ? 'active sidebar__project'\n            : 'sidebar__project'\n        }\n      >\n        <div\n          role=\"button\"\n          tabIndex={0}\n          aria-label={`Select ${project.name} as the task project`}\n          onClick={() => {\n            setActive(project.projectId);\n            setSelectedProject(project.projectId);\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              setActive(project.projectId);\n              setSelectedProject(project.projectId);\n            }\n          }}\n        >\n          \n          <IndividualProject project={project} />\n\n        </div>\n      </li>\n    ))\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\nexport const Projects = ({\n  activeValue = null\n}) => {\n  _s();\n\n  const [active, setActive] = useState(activeValue);\n  const {\n    setSelectedProject\n  } = useSelectedProjectValue();\n  const {\n    projects\n  } = useProjectsValue();\n  console.log(projects);\n  return projects && projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n    \"data-testid\": \"project-action-parent\",\n    \"data-doc-id\": project.docId,\n    className: active === project.projectId ? 'active sidebar__project' : 'sidebar__project',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"button\",\n      \"data-testid\": \"project-action\",\n      tabIndex: 0,\n      \"aria-label\": `Select ${project.name} as the task project`,\n      onClick: () => {\n        setActive(project.projectId);\n        setSelectedProject(project.projectId);\n      },\n      onKeyDown: e => {\n        if (e.key === 'Enter') {\n          setActive(project.projectId);\n          setSelectedProject(project.projectId);\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(IndividualProject, {\n        project: project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, project.projectId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this));\n};\n\n_s(Projects, \"luqUhN3RH5J52tPZ2BiB3n96wWU=\", false, function () {\n  return [useSelectedProjectValue, useProjectsValue];\n});\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/Projects.js"],"names":["React","useState","PropTypes","useSelectedProjectValue","useProjectsValue","Projects","activeValue","active","setActive","setSelectedProject","projects","console","log","map","project","docId","projectId","name","e","key"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,uBAAT,EAAkCC,gBAAlC,QAA0D,YAA1D;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,WAAW,GAAG;AAAhB,CAAD,KAA4B;AAAA;;AAClD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACK,WAAD,CAApC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAyBN,uBAAuB,EAAtD;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAeN,gBAAgB,EAArC;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAGA,SACEA,QAAQ,IACRA,QAAQ,CAACG,GAAT,CAAcC,OAAD,iBACX;AAEE,mBAAY,uBAFd;AAGE,mBAAaA,OAAO,CAACC,KAHvB;AAIE,IAAA,SAAS,EACPR,MAAM,KAAKO,OAAO,CAACE,SAAnB,GACI,yBADJ,GAEI,kBAPR;AAAA,2BAUE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,gBAFd;AAGE,MAAA,QAAQ,EAAE,CAHZ;AAIE,oBAAa,UAASF,OAAO,CAACG,IAAK,sBAJrC;AAKE,MAAA,OAAO,EAAE,MAAM;AACbT,QAAAA,SAAS,CAACM,OAAO,CAACE,SAAT,CAAT;AACAP,QAAAA,kBAAkB,CAACK,OAAO,CAACE,SAAT,CAAlB;AACD,OARH;AASE,MAAA,SAAS,EAAGE,CAAD,IAAO;AAChB,YAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBX,UAAAA,SAAS,CAACM,OAAO,CAACE,SAAT,CAAT;AACAP,UAAAA,kBAAkB,CAACK,OAAO,CAACE,SAAT,CAAlB;AACD;AACF,OAdH;AAAA,6BAiBE,QAAC,iBAAD;AAAmB,QAAA,OAAO,EAAEF;AAA5B;AAAA;AAAA;AAAA;AAAA;AAjBF;AAAA;AAAA;AAAA;AAAA;AAVF,KACOA,OAAO,CAACE,SADf;AAAA;AAAA;AAAA;AAAA,UADF,CAFF;AAoCD,CA5CM;;GAAMX,Q;UAEoBF,uB,EACVC,gB;;;KAHVC,Q","sourcesContent":["\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\n\nexport const Projects = ({ activeValue = null }) => {\n  const [active, setActive] = useState(activeValue);\n  const { setSelectedProject } = useSelectedProjectValue();\n  const { projects } = useProjectsValue();\n\n  console.log(projects);\n\n\n  return (\n    projects &&\n    projects.map((project) => (\n      <li\n        key={project.projectId}\n        data-testid=\"project-action-parent\"\n        data-doc-id={project.docId}\n        className={\n          active === project.projectId\n            ? 'active sidebar__project'\n            : 'sidebar__project'\n        }\n      >\n        <div\n          role=\"button\"\n          data-testid=\"project-action\"\n          tabIndex={0}\n          aria-label={`Select ${project.name} as the task project`}\n          onClick={() => {\n            setActive(project.projectId);\n            setSelectedProject(project.projectId);\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              setActive(project.projectId);\n              setSelectedProject(project.projectId);\n            }\n          }}\n        >\n          \n          <IndividualProject project={project} />\n\n        </div>\n      </li>\n    ))\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
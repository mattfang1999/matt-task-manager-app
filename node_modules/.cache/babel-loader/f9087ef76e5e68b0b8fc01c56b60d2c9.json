{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/src/context/selected-project-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from 'react';\nexport const SelectedProjectContext = /*#__PURE__*/createContext();\nexport const SelectedProjectProvider = ({\n  children\n}) => {\n  _s();\n\n  const [selectedProject, setSelectedProject] = useState('INBOX');\n  return /*#__PURE__*/_jsxDEV(SelectedProjectContext.Provider, {\n    value: {\n      selectedProject,\n      setSelectedProject\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectedProjectProvider, \"PiE3LofTNqS2/8luYihdwYhXx2g=\");\n\n_c = SelectedProjectProvider;\nexport const useSelectedProjectValue = () => {\n  _s2();\n\n  return useContext(SelectedProjectContext);\n};\n\n_s2(useSelectedProjectValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedProjectProvider\");","map":{"version":3,"sources":["/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/src/context/selected-project-context.js"],"names":["React","createContext","useContext","useState","SelectedProjectContext","SelectedProjectProvider","children","selectedProject","setSelectedProject","useSelectedProjectValue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AAEA,OAAO,MAAMC,sBAAsB,gBAAGH,aAAa,EAA5C;AACP,OAAO,MAAMI,uBAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACvD,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,OAAD,CAAtD;AAEA,sBACE,QAAC,sBAAD,CAAwB,QAAxB;AACE,IAAA,KAAK,EAAE;AAAEI,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,KADT;AAAA,cAGGF;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAVM;;GAAMD,uB;;KAAAA,uB;AAYb,OAAO,MAAMI,uBAAuB,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,sBAAD,CAAhB;AAAA,CAAhC;;IAAMK,uB","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nexport const SelectedProjectContext = createContext();\nexport const SelectedProjectProvider = ({ children }) => {\n  const [selectedProject, setSelectedProject] = useState('INBOX');\n\n  return (\n    <SelectedProjectContext.Provider\n      value={{ selectedProject, setSelectedProject }}\n    >\n      {children}\n    </SelectedProjectContext.Provider>\n  );\n};\n\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);"]},"metadata":{},"sourceType":"module"}
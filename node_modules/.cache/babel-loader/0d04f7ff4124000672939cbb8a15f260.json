{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/ProjectOverlay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useProjectValue } from '../context';\nexport const ProjectOverlay = ({\n  setProject,\n  showProjectOverlay,\n  setShowProjectOverlay\n}) => {\n  _s();\n\n  const {\n    projects\n  } = useProjectsValue();\n  return projects && showProjectOverlay && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-overlay\",\n    \"data-testid\": \"project-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"project-overlay__list\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-testid\": \"project-overlay-action\",\n        onClick: () => {\n          setProject(project.projectId);\n          setShowProjectOverlay(false);\n        },\n        children: project.name\n      }, project.projectId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ProjectOverlay, \"pX7h6nvXaHcZzUUq5ErvDCW2tAA=\", true);\n\n_c = ProjectOverlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectOverlay\");","map":{"version":3,"sources":["/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/ProjectOverlay.js"],"names":["React","useState","useProjectValue","ProjectOverlay","setProject","showProjectOverlay","setShowProjectOverlay","projects","useProjectsValue","map","project","projectId","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,eAAR,QAA8B,YAA9B;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,kBAAb;AAAiCC,EAAAA;AAAjC,CAAD,KAA6D;AAAA;;AACvF,QAAM;AAACC,IAAAA;AAAD,MAAaC,gBAAgB,EAAnC;AAGA,SACID,QAAQ,IAAIF,kBAAZ,iBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,mBAAY,iBAA7C;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA,gBACKE,QAAQ,CAACE,GAAT,CAAaC,OAAO,iBACjB;AAEI,uBAAY,wBAFhB;AAGI,QAAA,OAAO,EAAE,MAAI;AACTN,UAAAA,UAAU,CAACM,OAAO,CAACC,SAAT,CAAV;AACAL,UAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH,SANL;AAAA,kBAQKI,OAAO,CAACE;AARb,SACSF,OAAO,CAACC,SADjB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFR;AAqBH,CAzBM;;GAAMR,c;;KAAAA,c","sourcesContent":["import React, { useState } from 'react';\nimport {useProjectValue} from '../context';\n\nexport const ProjectOverlay = ({setProject, showProjectOverlay, setShowProjectOverlay}) => {\n    const {projects} = useProjectsValue();\n\n\n    return (\n        projects && showProjectOverlay && (\n            <div className='project-overlay' data-testid='project-overlay'>\n                <ul className='project-overlay__list'>\n                    {projects.map(project => (\n                        <li\n                            key={project.projectId}\n                            data-testid='project-overlay-action'\n                            onClick={()=>{\n                                setProject(project.projectId);\n                                setShowProjectOverlay(false);\n                            }}\n                        >\n                            {project.name}\n                        </li>\n                    ))}\n                </ul>\n\n            </div>\n        )\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/ProjectOverlay.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useProjectsValue } from '../context';\nexport const ProjectOverlay = ({\n  setProject,\n  showProjectOverlay,\n  setShowProjectOverlay\n}) => {\n  _s();\n\n  const {\n    projects\n  } = useProjectsValue();\n  return projects && showProjectOverlay && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-overlay\",\n    \"data-testid\": \"project-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"project-overlay__list\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"project-overlay-action\",\n          onClick: () => {\n            setProject(project.projectId);\n            setShowProjectOverlay(false);\n          },\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              setProject(project.projectId);\n              setShowProjectOverlay(false);\n            }\n          },\n          role: \"button\",\n          tabIndex: 0,\n          \"aria-label\": \"Select the task project\",\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this)\n      }, project.projectId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ProjectOverlay, \"pCI/t3SA1LbWtv3hBzgXlxQD6/c=\", false, function () {\n  return [useProjectsValue];\n});\n\n_c = ProjectOverlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectOverlay\");","map":{"version":3,"sources":["/Users/matthewfang1999/Documents/CMU/F20/PUI/HW8/taskmanagerapp/src/components/ProjectOverlay.js"],"names":["React","useProjectsValue","ProjectOverlay","setProject","showProjectOverlay","setShowProjectOverlay","projects","map","project","projectId","e","key","name"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAC7BC,EAAAA,UAD6B;AAE7BC,EAAAA,kBAF6B;AAG7BC,EAAAA;AAH6B,CAAD,KAIxB;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAeL,gBAAgB,EAArC;AAEA,SACEK,QAAQ,IACRF,kBADA,iBAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,mBAAY,iBAA7C;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA,gBACGE,QAAQ,CAACC,GAAT,CAAcC,OAAD,iBACZ;AAAA,+BACE;AACE,yBAAY,wBADd;AAEE,UAAA,OAAO,EAAE,MAAM;AACbL,YAAAA,UAAU,CAACK,OAAO,CAACC,SAAT,CAAV;AACAJ,YAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,WALH;AAME,UAAA,SAAS,EAAGK,CAAD,IAAO;AAChB,gBAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBR,cAAAA,UAAU,CAACK,OAAO,CAACC,SAAT,CAAV;AACAJ,cAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;AACF,WAXH;AAYE,UAAA,IAAI,EAAC,QAZP;AAaE,UAAA,QAAQ,EAAE,CAbZ;AAcE,wBAAW,yBAdb;AAAA,oBAgBGG,OAAO,CAACI;AAhBX;AAAA;AAAA;AAAA;AAAA;AADF,SAASJ,OAAO,CAACC,SAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAHJ;AA+BD,CAtCM;;GAAMP,c;UAKUD,gB;;;KALVC,c","sourcesContent":["\nimport React from 'react';\nimport { useProjectsValue } from '../context';\n\nexport const ProjectOverlay = ({\n  setProject,\n  showProjectOverlay,\n  setShowProjectOverlay,\n}) => {\n  const { projects } = useProjectsValue();\n\n  return (\n    projects &&\n    showProjectOverlay && (\n      <div className=\"project-overlay\" data-testid=\"project-overlay\">\n        <ul className=\"project-overlay__list\">\n          {projects.map((project) => (\n            <li key={project.projectId}>\n              <div\n                data-testid=\"project-overlay-action\"\n                onClick={() => {\n                  setProject(project.projectId);\n                  setShowProjectOverlay(false);\n                }}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') {\n                    setProject(project.projectId);\n                    setShowProjectOverlay(false);\n                  }\n                }}\n                role=\"button\"\n                tabIndex={0}\n                aria-label=\"Select the task project\"\n              >\n                {project.name}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  );\n};"]},"metadata":{},"sourceType":"module"}